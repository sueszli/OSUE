/**
 * @file utils.h
 * @author Markus Paoli 01417212
 * @date 2021/12/08
 *
 * @brief The utilities module.
 *
 * @details This module contains utility functions for use by other modules.
 *          It includes a function for reading a line from a file,
 *          a function to write a string to a file and a function to free lines
 *          created by read_lines().
 */

/**
 * The read_line function
 * @brief Reads a line of arbitrary length from the file described by fd.
 *
 * @details This function reads a line of arbitrary length up to '\n' or EOF whichever is encountered first,
 *          '\0' terminates it and returns a pointer to it. 
 * @param fd The file descripter of the file to read from.
 * @return Returns a pointer to a string ending with a newline, an empty string "" if EOF was encountered before any charachters 
  * could be read, or NULL in case of an error.
 */
char* read_line(int fd);

/**
 * The write_line function
 * @brief Writes a string of arbitrary length to the file described by fd.
 *
 * @details This function writes a string of arbitrary length up to but not including '\0'
 * to the file described by fd.
 * @param fd The file descripter of the file to write to.
 * @param line The string, that needs to be written.
 * @return Returns 0 if the line was successfully written or -1 in case of an error.
 */
int write_line(int fd, const char *line);

/**
 * The free_line function
 * @brief Frees a line. 
 *
 * @details Calls free() on a line allocated by read_line(). 
 * @param line A line generated by read_line.
 */
 void free_line(char *line);